# -*- coding: utf-8 -*-
"""LeetCodeProblems.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EhXHTo5IVZOHKp27uxh1iG6lWh_PX7WG
"""

class Solution(object):
    def mySolution_numIdenticalPairs(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        count = 0
        for i in range(len(nums)):
            for j in range(i+1, len(nums)):
                if nums[i] == nums[j]:
                    count = count + 1
        return count
    def bestSolution_numIdenticalPairs(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """

        freq_dict = {}
        gp = 0
        for val in nums:
            if val not in freq_dict:
                freq_dict[val] = 1
            else:

                gp += freq_dict[val]
                freq_dict[val] += 1
        return gp
        # gp = 0
        # for val in freq_dict:
        #     if freq_dict[val] > 2:
        #         gp = gp + freq_dict[val]


        return gp

        #brute force
        # gp = 0
        # for i in range(len(nums)):
        #     for j in range(i+1, len(nums)):
        #         if nums[i] == nums[j]:
        #             gp += 1
        # return gp

